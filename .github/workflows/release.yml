# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name:  alpha prerelease CI

on:
  push:
    tags:
    - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: 'Cache'
      uses: actions/cache@v3
      id: cache-dependencies
      with:
        path: node_modules
        key: ${{runner.OS}}-${{hashFiles('**/yarn.lock')}}
    - name: Fetch all tags
      run: sudo git fetch --force --tags
    - name: 'Read the current version number'
      id: version
      uses: zhanghengxin/reading-a-file-of-JSON@ice
      with:
        path: ./package.json
        property: version
    - name: Get version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: 'echo artifact'
      run: |
        echo ${{ steps.version.outputs.value }}
        echo github ${{ github }}
        echo github.sha ${{ github.sha }}
        echo env.VERSION ${{ steps.get_version.outputs.VERSION }}
    - run: yarn install
    - run: yarn build
    - run: |
        tar -zcvf linux-all-dappsteros-${{ steps.get_version.outputs.VERSION }}.tar.gz build
    - name: 'Update release'
      uses: zhanghengxin/git-release-private@ice
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        allow_override: true
        gzip: false
        prerelease: true
        tag: ${{ steps.get_version.outputs.VERSION }}
        files: ./linux-all-dappsteros-${{ steps.get_version.outputs.VERSION }}.tar.gz      
      env:
        GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB2 }} 
